<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="JMines">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	<property name="jarfolder" value="jar" />
	<property name="jarlocation" value="${jarfolder}/${ant.project.name}.jar"/>


    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${basedir}/lib/junit.jar"/>
        <pathelement location="${basedir}/lib/org.hamcrest.core_1.1.0.jar"/>
    </path>
    <path id="JMines.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    	<delete dir="jar"/>
    	<delete dir="build"/>
    	<delete dir="${junit.output.dir}"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project" description="compile all files">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" includeantruntime="false" encoding="UTF-8">
            <src path="src"/>
            <classpath refid="JMines.classpath"/>
        </javac>
    </target>
    
    <target name="jar" depends="build">
        <mkdir dir="${jarfolder}"/>
        <jar destfile="${jarlocation}" basedir="bin">
            <manifest>
                <attribute name="Main-Class" value="com.steffenschroeder.jmines.gui.GuiGame"/>
            </manifest>
        </jar>
    </target>
    <target name="run" depends="jar,test" description="run the jar with standard settings">
        <java jar="${jarlocation}" fork="true"/>
    </target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="test" depends="build-project" description="Run all Unit tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr"  failureproperty="junit.failure" >
        	<batchtest todir="${junit.output.dir}">
        		<fileset dir="src">
        			<include name="**/test/**"/>
				</fileset>
 
        		<formatter type="xml"/>
        	</batchtest>
            <classpath refid="JMines.classpath"/>
        </junit>
    	<fail if="junit.failure" message="Unittest(s) failed - check the reports"/>
    </target>
    <target name="GuiGame" depends="build-project" description="run the gui game">
        <java classname="com.steffenschroeder.jmines.gui.GuiGame" failonerror="true" fork="yes">
            <classpath refid="JMines.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
